<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/aop
                        https://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <bean id="george" class="com.geekbang.shengfq.week5.spring.bean.Student">
        <property name="age" value="11">
        </property>
        <property name="name" value="gerge"/>
    </bean>

    <bean id="shengfq" class="com.geekbang.shengfq.week5.spring.bean.Student">
        <property name="name" value="kim"/>
        <property name="age" value="19"/>
    </bean>
    <bean id="klass01" class="com.geekbang.shengfq.week5.spring.bean.Klass">
        <property name="students">
            <list>
                <ref bean="george"/>
            </list>
        </property>
        <property name="name" value="klass01"/>
    </bean>
    <bean id="school01" class="com.geekbang.shengfq.week5.spring.bean.School">
        <property name="klasses">
            <list>
                <ref bean="klass01"></ref>

            </list>
        </property>
        <property name="name" value="school01"/>
    </bean>

    <bean id="studentServiceImpl" class="com.geekbang.shengfq.week5.spring.jdbc.StudentServiceImpl">
        <property name="studentJdbcTemplate" ref="studentJDBCTemplate"/>
        <property name="studentJDBCRepository" ref="studentJDBCRepository"/>
    </bean>
    <!--spring jdbc datasource-->
   <!-- <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/TEST"/>
        <property name="username" value="root"/>
        <property name="password" value="1qazXSW@"/>
    </bean>-->
    <!--hikari连接池配置-->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/TEST" />
        <property name="username" value="root" />
        <property name="password" value="1qazXSW@" />
        <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
        <property name="connectionTimeout" value="30000" />
        <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
        <property name="idleTimeout" value="600000" />
        <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
        <property name="maxLifetime" value="1800000" />
        <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：-->
        <property name="maximumPoolSize" value="10" />
        <!-- <property name="minimumIdle" value="${hikari.minimumIdle}" /> -->
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">1024</prop>
                <prop key="prepStmtCacheSqlLimit">4096</prop>
                <prop key="useServerPrepStmts">true</prop>
            </props>
        </property>
    </bean>



    <!--spring jdbc transaction-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 注解方式配置事务 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!-- Definition for studentJDBCTemplate bean -->
    <bean id="studentJDBCTemplate"
          class="com.geekbang.shengfq.week5.spring.jdbc.StudentJdbcTemplate">
        <property name="dataSource"  ref="dataSource" />
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <!--Definition for original JDBC -->
    <bean id="studentJDBCRepository"
          class="com.geekbang.shengfq.week5.spring.jdbc.StudentJdbcRepository">
        <property name="dataSource"  ref="dataSource" />
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <!--spring bean装载自动注入需要扫描包,如果没有指定下面的包名,则@Autowize @Resource均是NPE-->
    <context:component-scan base-package="com.geekbang.shengfq.week5" />
    <aop:aspectj-autoproxy  />
    <!--声明式事务处理-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="create*"/>
            <tx:method name="save*"/>
            &lt;!&ndash; 以如下关键字开头的方法不使用事务 &ndash;&gt;
            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="load*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="datagrid*" propagation="SUPPORTS" />

        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.geekbang.shengfq.week5.spring.jdbc.IStudentService.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
    </aop:config>-->
</beans>